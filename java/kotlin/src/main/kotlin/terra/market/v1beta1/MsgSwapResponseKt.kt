//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: iq/market/v1beta1/tx.proto

package iq.market.v1beta1;

@kotlin.jvm.JvmSynthetic
inline fun msgSwapResponse(block: iq.market.v1beta1.MsgSwapResponseKt.Dsl.() -> Unit): iq.market.v1beta1.Tx.MsgSwapResponse =
  iq.market.v1beta1.MsgSwapResponseKt.Dsl._create(iq.market.v1beta1.Tx.MsgSwapResponse.newBuilder()).apply { block() }._build()
object MsgSwapResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    @kotlin.jvm.JvmField private val _builder: iq.market.v1beta1.Tx.MsgSwapResponse.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: iq.market.v1beta1.Tx.MsgSwapResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): iq.market.v1beta1.Tx.MsgSwapResponse = _builder.build()

    /**
     * <code>.cosmos.base.v1beta1.Coin swap_coin = 1 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"swap_coin&#92;""];</code>
     */
    var swapCoin: cosmos.base.v1beta1.CoinOuterClass.Coin
      @JvmName("getSwapCoin")
      get() = _builder.getSwapCoin()
      @JvmName("setSwapCoin")
      set(value) {
        _builder.setSwapCoin(value)
      }
    /**
     * <code>.cosmos.base.v1beta1.Coin swap_coin = 1 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"swap_coin&#92;""];</code>
     */
    fun clearSwapCoin() {
      _builder.clearSwapCoin()
    }
    /**
     * <code>.cosmos.base.v1beta1.Coin swap_coin = 1 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"swap_coin&#92;""];</code>
     * @return Whether the swapCoin field is set.
     */
    fun hasSwapCoin(): kotlin.Boolean {
      return _builder.hasSwapCoin()
    }

    /**
     * <code>.cosmos.base.v1beta1.Coin swap_fee = 2 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"swap_fee&#92;""];</code>
     */
    var swapFee: cosmos.base.v1beta1.CoinOuterClass.Coin
      @JvmName("getSwapFee")
      get() = _builder.getSwapFee()
      @JvmName("setSwapFee")
      set(value) {
        _builder.setSwapFee(value)
      }
    /**
     * <code>.cosmos.base.v1beta1.Coin swap_fee = 2 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"swap_fee&#92;""];</code>
     */
    fun clearSwapFee() {
      _builder.clearSwapFee()
    }
    /**
     * <code>.cosmos.base.v1beta1.Coin swap_fee = 2 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"swap_fee&#92;""];</code>
     * @return Whether the swapFee field is set.
     */
    fun hasSwapFee(): kotlin.Boolean {
      return _builder.hasSwapFee()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun iq.market.v1beta1.Tx.MsgSwapResponse.copy(block: iq.market.v1beta1.MsgSwapResponseKt.Dsl.() -> Unit): iq.market.v1beta1.Tx.MsgSwapResponse =
  iq.market.v1beta1.MsgSwapResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()
